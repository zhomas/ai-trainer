{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createAppThunk } from \"./store\";\nimport * as modal from \"./modal/modal.slice\";\nconst initialState = {\n  imageID: 0,\n  screen: \"pick\",\n  marked: []\n};\nconst appSlice = createSlice({\n  name: \"trainer\",\n  initialState,\n  reducers: {\n    real: state => {\n      state.imageID = (state.imageID + 1) % 16;\n    },\n    unreal: state => {\n      state.screen = \"modal\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(modal.cancel, state => {\n      state.screen = \"pick\";\n    });\n    builder.addCase(modal.confirm, (state, action) => {\n      state.screen = \"pick\";\n    });\n  }\n});\nexport const initialise = createAppThunk(\"trainer/init\", async () => {\n  const response = await axios.get(\"http://localhost:3000/api/v1/image?id=1\", {\n    responseType: \"stream\"\n  });\n  console.log(response);\n});\nexport const {\n  real,\n  unreal\n} = appSlice.actions;\nexport default appSlice.reducer;","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/app.slice.ts"],"names":["createSlice","axios","createAppThunk","modal","initialState","imageID","screen","marked","appSlice","name","reducers","real","state","unreal","extraReducers","builder","addCase","cancel","confirm","action","initialise","response","get","responseType","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAmBC,cAAnB,QAAyC,SAAzC;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AAYA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,OAAO,EAAE,CADwB;AAEjCC,EAAAA,MAAM,EAAE,MAFyB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAMA,MAAMC,QAAQ,GAAGR,WAAW,CAAC;AAC3BS,EAAAA,IAAI,EAAE,SADqB;AAE3BL,EAAAA,YAF2B;AAG3BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAGC,KAAD,IAAW;AACfA,MAAAA,KAAK,CAACP,OAAN,GAAgB,CAACO,KAAK,CAACP,OAAN,GAAgB,CAAjB,IAAsB,EAAtC;AACD,KAHO;AAIRQ,IAAAA,MAAM,EAAGD,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACN,MAAN,GAAe,OAAf;AACD;AANO,GAHiB;AAW3BQ,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,KAAK,CAACc,MAAtB,EAA+BL,KAAD,IAAW;AACvCA,MAAAA,KAAK,CAACN,MAAN,GAAe,MAAf;AACD,KAFD;AAIAS,IAAAA,OAAO,CAACC,OAAR,CAAgBb,KAAK,CAACe,OAAtB,EAA+B,CAACN,KAAD,EAAQO,MAAR,KAAmB;AAChDP,MAAAA,KAAK,CAACN,MAAN,GAAe,MAAf;AACD,KAFD;AAGD;AAnB0B,CAAD,CAA5B;AAsBA,OAAO,MAAMc,UAAU,GAAGlB,cAAc,CAAC,cAAD,EAAiB,YAAY;AACnE,QAAMmB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,yCAAV,EAAqD;AAC1EC,IAAAA,YAAY,EAAE;AAD4D,GAArD,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,CALuC,CAAjC;AAOP,OAAO,MAAM;AAAEV,EAAAA,IAAF;AAAQE,EAAAA;AAAR,IAAmBL,QAAQ,CAACkB,OAAlC;AAEP,eAAelB,QAAQ,CAACmB,OAAxB","sourcesContent":["import { createSlice, Dictionary } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { AppState, createAppThunk } from \"./store\";\nimport * as modal from \"./modal/modal.slice\";\n\ntype Reason = { id: string; label: string };\n\ntype Marked = { imageID: string; reasonIDs: string[] };\n\ninterface TrainerState {\n  imageID: number;\n  screen: \"pick\" | \"modal\" | \"report\";\n  marked: Marked[];\n}\n\nconst initialState: TrainerState = {\n  imageID: 0,\n  screen: \"pick\",\n  marked: [],\n};\n\nconst appSlice = createSlice({\n  name: \"trainer\",\n  initialState,\n  reducers: {\n    real: (state) => {\n      state.imageID = (state.imageID + 1) % 16;\n    },\n    unreal: (state) => {\n      state.screen = \"modal\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(modal.cancel, (state) => {\n      state.screen = \"pick\";\n    });\n\n    builder.addCase(modal.confirm, (state, action) => {\n      state.screen = \"pick\";\n    });\n  },\n});\n\nexport const initialise = createAppThunk(\"trainer/init\", async () => {\n  const response = await axios.get(\"http://localhost:3000/api/v1/image?id=1\", {\n    responseType: \"stream\",\n  });\n  console.log(response);\n});\n\nexport const { real, unreal } = appSlice.actions;\n\nexport default appSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}