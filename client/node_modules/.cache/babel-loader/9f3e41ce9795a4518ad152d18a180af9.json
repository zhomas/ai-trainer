{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createAppThunk } from \"./store\";\n\nconst getNextImage = state => {\n  return (state.imageID + 1) % 16;\n};\n\nconst appSlice = createSlice({\n  name: \"trainer\",\n  initialState: {\n    imageID: 0\n  },\n  reducers: {\n    next: state => {\n      state.imageID = (state.imageID + 1) % 16;\n    }\n  }\n});\nexport const initialise = createAppThunk(\"trainer/init\", async () => {\n  const response = await axios.get(\"http://localhost:3000/api/v1/image?id=1\", {\n    responseType: \"stream\"\n  });\n  console.log(response);\n});\nexport const {\n  next\n} = appSlice.actions;\nexport default appSlice.reducer;","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/app.slice.ts"],"names":["createSlice","axios","createAppThunk","getNextImage","state","imageID","appSlice","name","initialState","reducers","next","initialise","response","get","responseType","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAmBC,cAAnB,QAAyC,SAAzC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAqB;AACxC,SAAO,CAACA,KAAK,CAACC,OAAN,GAAgB,CAAjB,IAAsB,EAA7B;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAGN,WAAW,CAAC;AAC3BO,EAAAA,IAAI,EAAE,SADqB;AAE3BC,EAAAA,YAAY,EAAE;AACZH,IAAAA,OAAO,EAAE;AADG,GAFa;AAK3BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAGN,KAAD,IAAW;AACfA,MAAAA,KAAK,CAACC,OAAN,GAAgB,CAACD,KAAK,CAACC,OAAN,GAAgB,CAAjB,IAAsB,EAAtC;AACD;AAHO;AALiB,CAAD,CAA5B;AAYA,OAAO,MAAMM,UAAU,GAAGT,cAAc,CAAC,cAAD,EAAiB,YAAY;AACnE,QAAMU,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,yCAAV,EAAqD;AAC1EC,IAAAA,YAAY,EAAE;AAD4D,GAArD,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,CALuC,CAAjC;AAOP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAWJ,QAAQ,CAACW,OAA1B;AAEP,eAAeX,QAAQ,CAACY,OAAxB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { AppState, createAppThunk } from \"./store\";\n\nconst getNextImage = (state: AppState) => {\n  return (state.imageID + 1) % 16;\n};\n\nconst appSlice = createSlice({\n  name: \"trainer\",\n  initialState: {\n    imageID: 0,\n  },\n  reducers: {\n    next: (state) => {\n      state.imageID = (state.imageID + 1) % 16;\n    },\n  },\n});\n\nexport const initialise = createAppThunk(\"trainer/init\", async () => {\n  const response = await axios.get(\"http://localhost:3000/api/v1/image?id=1\", {\n    responseType: \"stream\",\n  });\n  console.log(response);\n});\n\nexport const { next } = appSlice.actions;\n\nexport default appSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}