{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore, createAsyncThunk, combineReducers } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport appReducer from \"./app.slice\";\nimport modalReducer from \"./modal/modal.slice\";\nconst reducer = combineReducers({\n  app: appReducer,\n  modal: modalReducer\n});\nexport const store = configureStore({\n  reducer\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport function createAppThunk(typePrefix, payloadCreator) {\n  return createAsyncThunk(typePrefix, payloadCreator);\n}","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/store.ts"],"names":["configureStore","createAsyncThunk","combineReducers","useDispatch","useSelector","appReducer","modalReducer","reducer","app","modal","store","useAppDispatch","useAppSelector","createAppThunk","typePrefix","payloadCreator"],"mappings":";;AAAA,SACEA,cADF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,kBALP;AAMA,SAASC,WAAT,EAA4CC,WAA5C,QAA+D,aAA/D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,GAAG,EAAEH,UADyB;AAE9BI,EAAAA,KAAK,EAAEH;AAFuB,CAAD,CAA/B;AAKA,OAAO,MAAMI,KAAK,GAAGV,cAAc,CAAC;AAClCO,EAAAA;AADkC,CAAD,CAA5B;AAMP,OAAO,MAAMI,cAAc,GAAG;AAAA;;AAAA,SAAMR,WAAW,EAAjB;AAAA,CAAvB;;GAAMQ,c;UAAuBR,W;;;AACpC,OAAO,MAAMS,cAA8C,GAAGR,WAAvD;AAOP,OAAO,SAASS,cAAT,CACLC,UADK,EAELC,cAFK,EAGL;AACA,SAAOd,gBAAgB,CACrBa,UADqB,EAErBC,cAFqB,CAAvB;AAID","sourcesContent":["import {\n  configureStore,\n  AsyncThunkPayloadCreator,\n  createAsyncThunk,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport { useDispatch, TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport appReducer from \"./app.slice\";\nimport modalReducer from \"./modal/modal.slice\";\n\nconst reducer = combineReducers({\n  app: appReducer,\n  modal: modalReducer,\n});\n\nexport const store = configureStore({\n  reducer,\n});\n\nexport type AppState = ReturnType<typeof reducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n\ntype ThunkApiConfig = {\n  dispatch: AppDispatch;\n  state: AppState;\n};\n\nexport function createAppThunk<Returned = void, ThunkArg = void>(\n  typePrefix: string,\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>\n) {\n  return createAsyncThunk<Returned, ThunkArg, ThunkApiConfig>(\n    typePrefix,\n    payloadCreator\n  );\n}\n"]},"metadata":{},"sourceType":"module"}