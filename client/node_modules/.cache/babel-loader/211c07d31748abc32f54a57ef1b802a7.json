{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createAppThunk } from \"../store\";\nconst initialState = {\n  reasons: [{\n    id: \"bg\",\n    label: \"Background\"\n  }, {\n    id: \"eyes\",\n    label: \"Eyes\"\n  }],\n  otherReasonLabel: \"\",\n  selected: {}\n};\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    toggleReason: (state, action) => {\n      state.selected[action.payload.id] = !state.selected[action.payload.id];\n    },\n    cancel: state => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(confirm.fulfilled, (state, action) => {\n      state;\n    });\n  }\n});\nexport const confirm = createAppThunk(\"modal/confirm\", (arg, _ref) => {\n  let {\n    getState\n  } = _ref;\n});\nexport const {\n  cancel,\n  toggleReason\n} = modalSlice.actions;\nexport default modalSlice.reducer;","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/modal/modal.slice.ts"],"names":["createSlice","createAppThunk","initialState","reasons","id","label","otherReasonLabel","selected","modalSlice","name","reducers","toggleReason","state","action","payload","cancel","extraReducers","builder","addCase","confirm","fulfilled","arg","getState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAuD,kBAAvD;AAEA,SAAmBC,cAAnB,QAAyC,UAAzC;AAUA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GADO,EAEP;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFO,CADsB;AAK/BC,EAAAA,gBAAgB,EAAE,EALa;AAM/BC,EAAAA,QAAQ,EAAE;AANqB,CAAjC;AASA,MAAMC,UAAU,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,OADuB;AAE7BP,EAAAA,YAF6B;AAG7BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkD;AAC9DD,MAAAA,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAP,CAAeV,EAA9B,IAAoC,CAACQ,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAP,CAAeV,EAA9B,CAArC;AACD,KAHO;AAIRW,IAAAA,MAAM,EAAGH,KAAD,IAAW,CAAE;AAJb,GAHmB;AAS7BI,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBC,OAAO,CAACC,SAAxB,EAAmC,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK;AACN,KAFD;AAGD;AAb4B,CAAD,CAA9B;AAkBA,OAAO,MAAMO,OAAO,GAAGlB,cAAc,CACnC,eADmC,EAEnC,CAACoB,GAAD,WAAuB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAAE,CAFU,CAA9B;AAKP,OAAO,MAAM;AAAEP,EAAAA,MAAF;AAAUJ,EAAAA;AAAV,IAA2BH,UAAU,CAACe,OAA5C;AAEP,eAAef,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice, Dictionary, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { AppState, createAppThunk } from \"../store\";\n\ntype Reason = { id: string; label: string };\n\ninterface ModalState {\n  reasons: Reason[];\n  otherReasonLabel: string;\n  selected: Dictionary<boolean>;\n}\n\nconst initialState: ModalState = {\n  reasons: [\n    { id: \"bg\", label: \"Background\" },\n    { id: \"eyes\", label: \"Eyes\" },\n  ],\n  otherReasonLabel: \"\",\n  selected: {},\n};\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    toggleReason: (state, action: PayloadAction<{ id: string }>) => {\n      state.selected[action.payload.id] = !state.selected[action.payload.id];\n    },\n    cancel: (state) => {},\n  },\n  extraReducers: (builder) => {\n    builder.addCase(confirm.fulfilled, (state, action) => {\n      state;\n    });\n  },\n});\n\ntype ConfirmDialogArgs = { otherReason?: string };\n\nexport const confirm = createAppThunk(\n  \"modal/confirm\",\n  (arg, { getState }) => {}\n);\n\nexport const { cancel, toggleReason } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}