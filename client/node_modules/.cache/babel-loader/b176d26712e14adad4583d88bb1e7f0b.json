{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  reasons: [{\n    id: \"bg\",\n    label: \"Background\"\n  }, {\n    id: \"eyes\",\n    label: \"Eyes\"\n  }],\n  selected: {}\n};\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    toggleReason: (state, action) => {\n      state.selected[action.payload.id] = !state.selected[action.payload.id];\n    },\n    cancel: state => {},\n    confirm: () => {}\n  }\n});\nexport const {\n  cancel,\n  confirm,\n  toggleReason\n} = modalSlice.actions;\nexport default modalSlice.reducer;","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/modal/modal.slice.ts"],"names":["createSlice","initialState","reasons","id","label","selected","modalSlice","name","reducers","toggleReason","state","action","payload","cancel","confirm","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAAuD,kBAAvD;AAWA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,OAAO,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GADO,EAEP;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFO,CADsB;AAK/BC,EAAAA,QAAQ,EAAE;AALqB,CAAjC;AAQA,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,OADuB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkD;AAC9DD,MAAAA,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAP,CAAeT,EAA9B,IAAoC,CAACO,KAAK,CAACL,QAAN,CAAeM,MAAM,CAACC,OAAP,CAAeT,EAA9B,CAArC;AACD,KAHO;AAIRU,IAAAA,MAAM,EAAGH,KAAD,IAAW,CAAE,CAJb;AAKRI,IAAAA,OAAO,EAAE,MAAM,CAAE;AALT;AAHmB,CAAD,CAA9B;AAYA,OAAO,MAAM;AAAED,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBL,EAAAA;AAAnB,IAAoCH,UAAU,CAACS,OAArD;AAEP,eAAeT,UAAU,CAACU,OAA1B","sourcesContent":["import { createSlice, Dictionary, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { AppState, createAppThunk } from \"../store\";\n\ntype Reason = { id: string; label: string };\n\ninterface ModalState {\n  reasons: Reason[];\n  selected: Dictionary<boolean>;\n}\n\nconst initialState: ModalState = {\n  reasons: [\n    { id: \"bg\", label: \"Background\" },\n    { id: \"eyes\", label: \"Eyes\" },\n  ],\n  selected: {},\n};\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    toggleReason: (state, action: PayloadAction<{ id: string }>) => {\n      state.selected[action.payload.id] = !state.selected[action.payload.id];\n    },\n    cancel: (state) => {},\n    confirm: () => {},\n  },\n});\n\nexport const { cancel, confirm, toggleReason } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}