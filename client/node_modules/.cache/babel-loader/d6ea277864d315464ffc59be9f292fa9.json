{"ast":null,"code":"var _jsxFileName = \"/home/tomw/ai-trainer/client/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore({\n  reducer: rootReducer\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport function createAppThunk(typePrefix, payloadCreator) {\n  return createAsyncThunk(typePrefix, payloadCreator);\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","configureStore","createAsyncThunk","useDispatch","useSelector","store","reducer","rootReducer","useAppDispatch","useAppSelector","createAppThunk","typePrefix","payloadCreator","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,cADF,EAGEC,gBAHF,QAIO,kBAJP;AAMA,SAASC,WAAT,EAA4CC,WAA5C,QAA+D,aAA/D;;AAGA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAEC;AADkB,CAAD,CAA5B;AAMA,OAAO,MAAMC,cAAc,GAAG;AAAA;;AAAA,SAAML,WAAW,EAAjB;AAAA,CAAvB;;GAAMK,c;UAAuBL,W;;;AACpC,OAAO,MAAMM,cAA8C,GAAGL,WAAvD;AAOP,OAAO,SAASM,cAAT,CACLC,UADK,EAELC,cAFK,EAGL;AACA,SAAOV,gBAAgB,CACrBS,UADqB,EAErBC,cAFqB,CAAvB;AAID;AAEDd,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  configureStore,\n  AsyncThunkPayloadCreator,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { useDispatch, TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport reducer from \"./app.slice\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n\ntype ThunkApiConfig = {\n  dispatch: AppDispatch;\n  state: AppState;\n};\n\nexport function createAppThunk<Returned = void, ThunkArg = void>(\n  typePrefix: string,\n  payloadCreator: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>\n) {\n  return createAsyncThunk<Returned, ThunkArg, ThunkApiConfig>(\n    typePrefix,\n    payloadCreator\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}