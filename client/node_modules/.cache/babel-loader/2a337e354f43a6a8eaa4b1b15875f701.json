{"ast":null,"code":"var _jsxFileName = \"/home/tomw/ai-trainer/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useAppDispatch } from \"./store\";\nimport { initialise, real, unreal } from \"./app.slice\";\nimport { connect } from \"react-redux\";\nimport Modal from \"./modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    markReal,\n    markUnreal,\n    imageURL,\n    showModal\n  } = _ref;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(initialise());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: markReal,\n        children: \"Real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: markUnreal,\n        children: \"Not real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = App;\n\nconst mapStateToProps = state => {\n  const getImageURL = id => {\n    return `http://localhost:3000/api/v1/image?id=${id}`;\n  };\n\n  return {\n    imageURL: getImageURL(state.app.imageID),\n    showModal: state.app.screen === \"modal\"\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    markReal: () => dispatch(real()),\n    markUnreal: () => dispatch(unreal())\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tomw/ai-trainer/client/src/App.tsx"],"names":["React","useEffect","useAppDispatch","initialise","real","unreal","connect","Modal","App","markReal","markUnreal","imageURL","showModal","dispatch","mapStateToProps","state","getImageURL","id","app","imageID","screen","mapDispatchToProps","connector"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AAEA,OAAO,WAAP;AACA,SAAgCC,cAAhC,QAAsE,SAAtE;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,MAA3B,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;AAIA,MAAMC,GAAc,GAAG,QAAmD;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA;AAAlC,GAAkD;AACxE,QAAMC,QAAQ,GAAGX,cAAc,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEQ;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,EASGE,SAAS,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAThB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApBD;;GAAMJ,G;UACaN,c;;;KADbM,G;;AAsBN,MAAMM,eAAe,GAAIC,KAAD,IAAqB;AAC3C,QAAMC,WAAW,GAAIC,EAAD,IAAgB;AAClC,WAAQ,yCAAwCA,EAAG,EAAnD;AACD,GAFD;;AAIA,SAAO;AACLN,IAAAA,QAAQ,EAAEK,WAAW,CAACD,KAAK,CAACG,GAAN,CAAUC,OAAX,CADhB;AAELP,IAAAA,SAAS,EAAEG,KAAK,CAACG,GAAN,CAAUE,MAAV,KAAqB;AAF3B,GAAP;AAID,CATD;;AAWA,MAAMC,kBAAkB,GAAIR,QAAD,IAA2B;AACpD,SAAO;AACLJ,IAAAA,QAAQ,EAAE,MAAMI,QAAQ,CAACT,IAAI,EAAL,CADnB;AAELM,IAAAA,UAAU,EAAE,MAAMG,QAAQ,CAACR,MAAM,EAAP;AAFrB,GAAP;AAID,CALD;;AAOA,MAAMiB,SAAS,GAAGhB,OAAO,CAACQ,eAAD,EAAkBO,kBAAlB,CAAzB;AAEA,eAAef,OAAO,CAACQ,eAAD,EAAkBO,kBAAlB,CAAP,CAA6Cb,GAA7C,CAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { AppDispatch, AppState, useAppDispatch, useAppSelector } from \"./store\";\nimport { initialise, real, unreal } from \"./app.slice\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport Modal from \"./modal/Modal\";\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst App: FC<Props> = ({ markReal, markUnreal, imageURL, showModal }) => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(initialise());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className={\"active-image\"}>\n        <img src={imageURL} />\n      </div>\n      <div>\n        <button onClick={markReal}>Real</button>\n        <button onClick={markUnreal}>Not real</button>\n      </div>\n      <div>{}</div>\n      {showModal && <Modal />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  const getImageURL = (id: number) => {\n    return `http://localhost:3000/api/v1/image?id=${id}`;\n  };\n\n  return {\n    imageURL: getImageURL(state.app.imageID),\n    showModal: state.app.screen === \"modal\",\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\n  return {\n    markReal: () => dispatch(real()),\n    markUnreal: () => dispatch(unreal()),\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}